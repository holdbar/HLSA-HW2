version: '3.6'
services:

  myapp:
    image: myapp:latest
    container_name: myapp
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src/app.py:/app/app.py
    depends_on:
      - mongodb
      - elasticsearch
    links:
      - mongodb
      - elasticsearch

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8077:8077"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./static:/usr/share/nginx/html
    depends_on:
      - myapp
    links:
      - myapp

  mongodb:
    image: mongo:6.0.4
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      # - ELASTIC_PASSWORD=example
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  telegraf:
    image: telegraf:1.25.2
    container_name: telegraf
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - elasticsearch
      - socket-proxy
      - influxdb
      - nginx
      - myapp
      - mongodb
      
    links:
      - socket-proxy
      - influxdb
      - nginx
      - elasticsearch
      - myapp
      - mongodb
    ports:
    - '127.0.0.1:8125:8125/udp'
    - '127.0.0.1:8092:8092/udp'

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
      - '127.0.0.1:8083:8083'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=debug # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongodb_data: {}
  es_data: {}


